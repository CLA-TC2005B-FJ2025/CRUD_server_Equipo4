openapi: 3.0.0
info:
  title: API del Juego de Píxeles
  description: API para el sistema de adivinanza de imágenes pixeladas
  version: 1.0.0
servers:
  - url: https://api.pixelgame.com/v1
    description: Servidor de producción
tags:
  - name: Usuarios
    description: Operaciones con usuarios
  - name: Preguntas
    description: Gestión de preguntas del juego
  - name: Imágenes
    description: Manejo de imágenes pixeladas
  - name: Grixel
    description: Interacciones con píxeles
  - name: Respuestas
    description: Registro de respuestas de jugadores

paths:
  /Usuario:
    get:
      tags: [Usuarios]
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              example:
                - email: "admin@game.com"
                  NombreUsuario: "AdminPrincipal"
                - email: "jugador1@email.com"
                  NombreUsuario: "PixMaster"
    post:
      tags: [Usuarios]
      summary: Crear nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  maxLength: 60
                  example: "nuevo@jugador.com"
                NombreUsuario:
                  type: string
                  maxLength: 60
                  example: "NuevoJugador"
      responses:
        '201':
          description: Usuario creado
        '400':
          description: El email ya existe

  /Usuario/{email}:
    put:
      tags: [Usuarios]
      summary: Actualizar usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          example: "jugador1@email.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NombreUsuario:
                  type: string
                  example: "NuevoNombre"
      responses:
        '200':
          description: Usuario actualizado
        '404':
          description: Usuario no encontrado

  /Pregunta:
    get:
      tags: [Preguntas]
      summary: Obtener todas las preguntas
      responses:
        '200':
          description: Lista de preguntas
          content:
            application/json:
              example:
                - idPregunta: 1
                  pregunta: "¿Qué animal aparece en este píxel?"
                - idPregunta: 2
                  pregunta: "¿Cuál es el nombre de esta obra famosa?"

  /Imagen:
    get:
      tags: [Imágenes]
      summary: Obtener imágenes
      parameters:
        - name: activo
          in: query
          schema:
            type: boolean
          description: Filtrar por estado activo/inactivo
      responses:
        '200':
          description: Lista de imágenes
          content:
            application/json:
              example:
                - ImagenID: 1
                  Activo: true
                  Respuesta: "La Mona Lisa"
                  ImagenURL: "https://ejemplo.com/mona_lisa_pixelada.jpg"

  /Grixel:
    post:
      tags: [Grixel]
      summary: Registrar interacción con píxel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ImagenID:
                  type: integer
                  example: 1
                CoorX:
                  type: integer
                  example: 10
                CoorY:
                  type: integer
                  example: 10
                email_Usuario:
                  type: string
                  example: "jugador1@email.com"
                idPregunta_Pregunta:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Interacción registrada

  /Responde:
    post:
      tags: [Respuestas]
      summary: Registrar respuesta de jugador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Fecha:
                  type: string
                  format: date
                  example: "2023-01-01"
                Hora:
                  type: string
                  format: time
                  example: "12:00:00"
                email_Usuario:
                  type: string
                  example: "jugador1@email.com"
                RespuestaID:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Respuesta registrada

components:
  schemas:
    Usuario:
      type: object
      properties:
        email:
          type: string
        NombreUsuario:
          type: string
    Pregunta:
      type: object
      properties:
        idPregunta:
          type: integer
        pregunta:
          type: string
    Imagen:
      type: object
      properties:
        ImagenID:
          type: integer
        Activo:
          type: boolean
        Respuesta:
          type: string
        ImagenURL:
          type: string